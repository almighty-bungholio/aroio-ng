pcm.!default {
    type plug
    slave { pcm "dmixer" }
}

defaults.bluealsa.interface "hci0"
defaults.bluealsa.device "00:00:00:00:00:00"
defaults.bluealsa.profile "a2dp"
defaults.bluealsa.delay 10000

###################################################################################################

# MS-coding into raw hw:0 (unconverted)
pcm.i2s-mscoded {
    type plug
    hint { show on
		   description "MS-coded but otherwise unconverted output on soundcard 0"
	}
    slave.pcm "ladspa-i2s";
}

# MS-coding into raw hw:0 (slave)
pcm.ladspa-i2s {
    type ladspa
    slave.pcm "plughw:0,0";
    path "/usr/lib/ladspa";
    plugins [{
	label matrixStMS
        input {
            controls [  ]
        }
    }]
}

###################################################################################################

# MS-coding into dmixer
pcm.dmixer-mscoded {
    type plug
    hint { show on
		   description "MS-coded dmixer converted output on soundcard 0"
	}
    slave.pcm "ladspa-dmixer";
}

# MS-coding into dmixer plugin (slave)
pcm.ladspa-dmixer {
    type ladspa
    slave.pcm "plug-dmixer";
    path "/usr/lib/ladspa";
    plugins [{
	label matrixStMS
        input {
            controls [  ]
        }
    }]
}

###################################################################################################
#
## MS-coding into jack - NOT WORKING YET!!!
#pcm.jack-mscoded {
#    type plug
#    hint { show on
#		   description "MS-coded JACK audio bridge with needed conversions"
#	}
#    slave.pcm "ladspa-dmixer";
#}
#
## MS-coding into jack plugin (slave)
#pcm.ladspa-jack {
#    type ladspa
#    slave.pcm "jack";
#    path "/usr/lib/ladspa";
#    plugins [{
#	label matrixStMS
#        input {
#            controls [  ]
#        }
#    }]
#}
#
###################################################################################################

# dmixer conversion
pcm.plug-dmixer {
    type plug
    hint { show on
		   description "Dmixer converted output enabling multiple possible players"
	}
    slave { pcm "dmixer" }
}

# dmixer conversion slave
pcm.dmixer  {
	type dmix
    hint { show on
		   description "DMixer for HW0"
	}
	ipc_key 1024
	slave {
		pcm "hw:0,0"
		#period_time 0
		#period_size 1024
		#buffer_size 4096
		format S32_LE
        rate 48000 #SAMPLINGRATE
	}
	bindings {
		0 0
		1 1
	}
}

# dmixer ctl
ctl.dmixer {
	type hw
	card 0
}

###################################################################################################

# First soundcard with no conversions
pcm.i2s-plug {
    type plug
    hint { show on
		   description "1st Audio Card with needed conversions"
	}
    slave { pcm "i2s" }
}

# First soundcard with no conversions (slave)
pcm.i2s {
    type hw
    hint { show on
		   description "Raw I2S PCM device"
	}
    card 0
}

defaults.pcm.rate_converter "speexrate_medium"

###################################################################################################

# jack output to system ports with needed conversions and multiple inputs
pcm.jack {
    type plug
    slave { pcm "rawjack" }
    hint {
	description "JACK Audio bridge with needed conversions"
    }
}

# jack output to system ports
pcm.rawjack {
    type jack
    hint { show on
		   description "Raw jack device with 32 bits"
	}
    playback_ports {
        0 system:playback_1
        1 system:playback_2
    }
    capture_ports {
        0 system:capture_1
        1 system:capture_2
    }
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# jack output to brutefir with needed conversions and multiple inputs
pcm.jack-bf {
    type plug
    slave { pcm "rawjack-bf" }
    hint {
	description "JACK Audio bridge with needed conversions connecting to brutefir"
    }
}

# jack output to brutefir (slave)
pcm.rawjack-bf {
    type jack
    hint { show on
		   description "Raw jack device with 32 bits connecting to brutefir"
	}
    playback_ports {
        0 brutefir:input-0
        1 brutefir:input-1
    }
    capture_ports {
        0 system:capture_1
        1 system:capture_2
    }
}

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

# jack output to brutefir mscoded with needed conversions and multiple inputs
pcm.jack-bfms {
    type plug
    slave { pcm "rawjack-bf" }
    hint {
	description "JACK Audio bridge with needed conversions connecting to brutefir"
    }
}

# jack output to brutefir mscoded (slave)
pcm.rawjack-bfms {
    type jack
    hint { show on
		   description "Raw jack device with 32 bits connecting to brutefir"
	}
    playback_ports {
        0 brutefir:input-0
        1 brutefir:input-1
    }
    capture_ports {
        0 system:capture_1
        1 system:capture_2
    }
}

###################################################################################################
# M-Audio Fast Track Pro Device 0,1 und 0,2 as one 4 Channel Device
pcm.ftp4ch {
    type multi;
    slaves.a.pcm "hw:0,0";
    slaves.a.channels 2;
    slaves.b.pcm "hw:0,1";
    slaves.b.channels 2;

    bindings.0.slave a;
    bindings.0.channel 0;
    bindings.1.slave a;
    bindings.1.channel 1;
    bindings.2.slave b;
    bindings.2.channel 0;
    bindings.3.slave b;
    bindings.3.channel 1;
}

# Native Instruments Audio 8 DJ
pcm.na8dj {
    type multi
    slaves.a { pcm "hw:Audio8DJ,0,0"; channels 2 }
    slaves.b { pcm "hw:Audio8DJ,0,1"; channels 2 }
    slaves.c { pcm "hw:Audio8DJ,0,2"; channels 2 }
    slaves.d { pcm "hw:Audio8DJ,0,3"; channels 2 }

    bindings.0 { slave a; channel 0 }
    bindings.1 { slave a; channel 1 }
    bindings.2 { slave b; channel 0 }
    bindings.3 { slave b; channel 1 }
    bindings.4 { slave c; channel 0 }
    bindings.5 { slave c; channel 1 }
    bindings.6 { slave d; channel 0 }
    bindings.7 { slave d; channel 1 }
}

# A dummy control device to keep JACK happy
ctl.na8dj {
    type hw
    card 0
}

