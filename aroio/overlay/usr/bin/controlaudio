#!/bin/sh

. /boot/userconfig.txt

ACTION="$1"

[ "$SOUNDCARD" = "Internal HDMI audio" ] && amixer cset numid=3 2
[ "$SOUNDCARD" = "Internal audio jack" ] && amixer cset numid=3 1

function Start()
{

sed -i "/#SAMPLINGRATE/c\        rate "$RATE" #SAMPLINGRATE" /etc/asound.conf

	case "$AUDIO_OUTPUT" in
		i2s)
			case "$RAW_PLAYER" in
				squeezelite)
					systemctl "$ACTION" squeezelite.service
				;;

				gmediarender)
					systemctl "$ACTION" gmediarender.service
				;;

				shairportsync)
					systemctl "$ACTION" shairport-sync.service
				;;

				bluealsaaplay)
					systemctl "$ACTION" bluealsa-aplay.service
				;;
			esac
		;;

		i2s-mscoded)
			case "$RAW_PLAYERMS" in
				squeezelite)
					systemctl "$ACTION" squeezelite.service
				;;

				gmediarender)
					systemctl "$ACTION" gmediarender.service
				;;

				shairportsync)
					systemctl "$ACTION" shairport-sync.service
				;;

				bluealsaaplay)
					systemctl "$ACTION" bluealsa-aplay.service
				;;
			esac
		;;

		plug-dmixer)
			[ "$DMIX_SQUEEZELITE"   = "ON" ] && systemctl "$ACTION" squeezelite.service
			[ "$DMIX_GMEDIARENDER"  = "ON" ] && systemctl "$ACTION" gmediarender.service
			[ "$DMIX_SHAIRPORTSYNC" = "ON" ] && systemctl "$ACTION" shairport-sync.service
			[ "$DMIX_BLUEALSAAPLAY" = "ON" ] && systemctl "$ACTION" bluealsa-aplay.service
		;;

		dmixer-mscoded)
			[ "$DMIXMS_SQUEEZELITE"   = "ON" ] && systemctl "$ACTION" squeezelite.service
			[ "$DMIXMS_GMEDIARENDER"  = "ON" ] && systemctl "$ACTION" gmediarender.service
			[ "$DMIXMS_SHAIRPORTSYNC" = "ON" ] && systemctl "$ACTION" shairport-sync.service
			[ "$DMIXMS_BLUEALSAAPLAY" = "ON" ] && systemctl "$ACTION" bluealsa-aplay.service
		;;

		jack)
			systemctl "$ACTION" jackd.service
			#[ "$JACK_NETJACK"      = "ON" ] && systemctl "$ACTION" netjack.service
			[ "$JACK_SQUEEZELITE"   = "ON" ] && systemctl "$ACTION" squeezelite.service
			[ "$JACK_GMEDIARENDER"  = "ON" ] && systemctl "$ACTION" gmediarender.service
			[ "$JACK_SHAIRPORTSYNC" = "ON" ] && systemctl "$ACTION" shairport-sync.service
			[ "$JACK_BLUEALSAAPLAY" = "ON" ] && systemctl "$ACTION" bluealsa-aplay.service
			[ "$JACK_INPUT" = "ON" ] && sleep 0.2 && jack_connect system:capture_1 system:playback_1 && jack_connect system:capture_2 system:playback_2
		;;

		jack-bf)
			systemctl "$ACTION" jackd.service
			systemctl "$ACTION" brutefir.service
			until jack_lsp | grep brutefir ; do sleep 0.2 ; done
			#[ "$JACKBF_NETJACK"      = "ON" ] && systemctl "$ACTION" netjack.service
			[ "$JACKBF_SQUEEZELITE"   = "ON" ] && systemctl "$ACTION" squeezelite.service
			[ "$JACKBF_GMEDIARENDER"  = "ON" ] && systemctl "$ACTION" gmediarender.service
			[ "$JACKBF_SHAIRPORTSYNC" = "ON" ] && systemctl "$ACTION" shairport-sync.service
			[ "$JACKBF_BLUEALSAAPLAY" = "ON" ] && systemctl "$ACTION" bluealsa-aplay.service
			[ "$JACKBF_INPUT" = "ON" ] && sleep 0.2 && jack_connect system:capture_1 brutefir:input-0 && jack_connect system:capture_2 brutefir:input-1
		;;

		jack-bfms)
			systemctl "$ACTION" jackd.service
			systemctl "$ACTION" brutefir.service
			until jack_lsp | grep brutefir ; do sleep 0.2 ; done
			#[ "$JACKBFMS_NETJACK"      = "ON" ] && systemctl "$ACTION" netjack.service
			[ "$JACKBFMS_SQUEEZELITE"   = "ON" ] && systemctl "$ACTION" squeezelite.service
			[ "$JACKBFMS_GMEDIARENDER"  = "ON" ] && systemctl "$ACTION" gmediarender.service
			[ "$JACKBFMS_SHAIRPORTSYNC" = "ON" ] && systemctl "$ACTION" shairport-sync.service
			[ "$JACKBFMS_BLUEALSAAPLAY" = "ON" ] && systemctl "$ACTION" bluealsa-aplay.service
			[ "$JACKBFMS_INPUT" = "ON" ] && jack_connect system:capture_1 brutefir:input-0 && jack_connect system:capture_2 brutefir:input-1
		;;
	esac
}

function StopStatus()
{
	for SERVICE in squeezelite gmediarender shairport-sync bluealsa-aplay brutefir jackd
	do
		systemctl "$1" "$SERVICE".service
	done
}

case "$ACTION" in
	stop|status)
	StopStatus "$ACTION"
	;;

	start)
	Start
	;;

	restart)
	StopStatus stop
	Start
	;;
esac
