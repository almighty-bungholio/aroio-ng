From a9be198d68b8f497f81c3663cf3c5f6ee3f028d4 Mon Sep 17 00:00:00 2001
From: Arne Caspari <arne@unicap-imaging.org>
Date: Mon, 4 Feb 2019 09:53:09 +0100
Subject: [PATCH 2/4] Add TI SRC4382 CODEC driver

---
 sound/soc/codecs/Kconfig   |   4 ++
 sound/soc/codecs/Makefile  |   2 +
 sound/soc/codecs/src4382.c | 117 +++++++++++++++++++++++++++++++++++++
 3 files changed, 123 insertions(+)
 create mode 100644 sound/soc/codecs/src4382.c

diff --git a/sound/soc/codecs/Kconfig b/sound/soc/codecs/Kconfig
index b3c63d86e5ef..3aa25a0c79f1 100644
--- a/sound/soc/codecs/Kconfig
+++ b/sound/soc/codecs/Kconfig
@@ -136,6 +136,7 @@ config SND_SOC_ALL_CODECS
 	select SND_SOC_SIRF_AUDIO_CODEC
 	select SND_SOC_SN95031 if INTEL_SCU_IPC
 	select SND_SOC_SPDIF
+	select SND_SOC_SRC4382
 	select SND_SOC_SSM2518 if I2C
 	select SND_SOC_SSM2602_SPI if SPI_MASTER
 	select SND_SOC_SSM2602_I2C if I2C
@@ -826,6 +827,9 @@ config SND_SOC_SN95031
 config SND_SOC_SPDIF
 	tristate "S/PDIF CODEC"
 
+config SND_SOC_SRC4382
+	tristate "Texas Instruments SRC4382 CODEC"
+
 config SND_SOC_SSM2518
 	tristate
 
diff --git a/sound/soc/codecs/Makefile b/sound/soc/codecs/Makefile
index f910415bdd31..b3b15816595c 100644
--- a/sound/soc/codecs/Makefile
+++ b/sound/soc/codecs/Makefile
@@ -144,6 +144,7 @@ snd-soc-sirf-audio-codec-objs := sirf-audio-codec.o
 snd-soc-sn95031-objs := sn95031.o
 snd-soc-spdif-tx-objs := spdif_transmitter.o
 snd-soc-spdif-rx-objs := spdif_receiver.o
+snd-soc-src4382-objs := src4382.o
 snd-soc-ssm2518-objs := ssm2518.o
 snd-soc-ssm2602-objs := ssm2602.o
 snd-soc-ssm2602-spi-objs := ssm2602-spi.o
@@ -382,6 +383,7 @@ obj-$(CONFIG_SND_SOC_SIGMADSP_REGMAP)	+= snd-soc-sigmadsp-regmap.o
 obj-$(CONFIG_SND_SOC_SI476X)	+= snd-soc-si476x.o
 obj-$(CONFIG_SND_SOC_SN95031)	+=snd-soc-sn95031.o
 obj-$(CONFIG_SND_SOC_SPDIF)	+= snd-soc-spdif-rx.o snd-soc-spdif-tx.o
+obj-$(CONFIG_SND_SOC_SRC4382) += snd-soc-src4382.o
 obj-$(CONFIG_SND_SOC_SIRF_AUDIO_CODEC) += sirf-audio-codec.o
 obj-$(CONFIG_SND_SOC_SSM2518)	+= snd-soc-ssm2518.o
 obj-$(CONFIG_SND_SOC_SSM2602)	+= snd-soc-ssm2602.o
diff --git a/sound/soc/codecs/src4382.c b/sound/soc/codecs/src4382.c
new file mode 100644
index 000000000000..49b54d61836d
--- /dev/null
+++ b/sound/soc/codecs/src4382.c
@@ -0,0 +1,117 @@
+/*
+ * ALSA SoC SPDIF DIR (Digital Interface Reciever) driver
+ *
+ * Based on ALSA SoC SPDIF DIT driver
+ *
+ *  This driver is used by controllers which can operate in DIR (SPDI/F) where
+ *  no codec is needed.  This file provides stub codec that can be used
+ *  in these configurations. SPEAr SPDIF IN Audio controller uses this driver.
+ *
+ * Author:      Vipin Kumar,  <vipin.kumar@st.com>
+ * Copyright:   (C) 2012  ST Microelectronics
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License version 2 as
+ * published by the Free Software Foundation.
+ */
+
+#include <linux/module.h>
+#include <linux/moduleparam.h>
+#include <linux/slab.h>
+#include <sound/soc.h>
+#include <sound/pcm.h>
+#include <sound/initval.h>
+#include <linux/of.h>
+
+static const struct snd_soc_dapm_widget src4382_widgets[] = {
+	SND_SOC_DAPM_INPUT("spdif-in"),
+};
+
+static const struct snd_soc_dapm_route src4382_routes[] = {
+	{ "Capture", NULL, "spdif-in" },
+};
+
+#define SRC4382_RATES	SNDRV_PCM_RATE_44100 | SNDRV_PCM_RATE_48000
+#define SRC4382_FORMATS	(SNDRV_PCM_FMTBIT_S16_LE | \
+			SNDRV_PCM_FMTBIT_S20_3LE | \
+			SNDRV_PCM_FMTBIT_S24_LE | \
+			SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
+
+static const struct snd_soc_codec_driver soc_codec_src4382_dir = {
+	.component_driver = {
+		.dapm_widgets		= src4382_widgets,
+		.num_dapm_widgets	= ARRAY_SIZE(src4382_widgets),
+		.dapm_routes		= src4382_routes,
+		.num_dapm_routes	= ARRAY_SIZE(src4382_routes),
+	},
+};
+
+static int src4382_daiops_trigger(struct snd_pcm_substream *substream,
+		int cmd, struct snd_soc_dai *dai)
+{
+	switch (cmd) {
+	case SNDRV_PCM_TRIGGER_START:
+	case SNDRV_PCM_TRIGGER_RESUME:
+	case SNDRV_PCM_TRIGGER_PAUSE_RELEASE:
+        dev_info(dai->dev, "src4382 start\n");
+		break;
+	case SNDRV_PCM_TRIGGER_STOP:
+	case SNDRV_PCM_TRIGGER_SUSPEND:
+	case SNDRV_PCM_TRIGGER_PAUSE_PUSH:
+        dev_info(dai->dev, "src4382 stop\n");
+		break;
+	}
+
+	return 0;
+}
+
+static const struct snd_soc_dai_ops src4382_dai_ops = {
+	.trigger	= src4382_daiops_trigger,
+};
+
+static struct snd_soc_dai_driver dir_src4382_dai = {
+	.name		= "src4382-hifi",
+	.capture	= {
+		.stream_name	= "Capture",
+		.channels_min	= 2,
+		.channels_max	= 2,
+		.rates		= SRC4382_RATES,
+		.formats	= SRC4382_FORMATS,
+	},
+    .ops = &src4382_dai_ops,
+};
+
+static int src4382_dir_probe(struct platform_device *pdev)
+{
+	return snd_soc_register_codec(&pdev->dev, &soc_codec_src4382_dir,
+			&dir_src4382_dai, 1);
+}
+
+static int src4382_dir_remove(struct platform_device *pdev)
+{
+	snd_soc_unregister_codec(&pdev->dev);
+	return 0;
+}
+
+#ifdef CONFIG_OF
+static const struct of_device_id src4382_dir_dt_ids[] = {
+	{ .compatible = "ti,src4382", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, src4382_dir_dt_ids);
+#endif
+
+static struct platform_driver src4382_dir_driver = {
+	.probe		= src4382_dir_probe,
+	.remove		= src4382_dir_remove,
+	.driver		= {
+		.name	= "src4382",
+		.of_match_table = of_match_ptr(src4382_dir_dt_ids),
+	},
+};
+
+module_platform_driver(src4382_dir_driver);
+
+MODULE_DESCRIPTION("ASoC SRC4382 driver");
+MODULE_AUTHOR("Arne Caspari <arne@unicap-imaging.org>");
+MODULE_LICENSE("GPL");
-- 
2.20.1

